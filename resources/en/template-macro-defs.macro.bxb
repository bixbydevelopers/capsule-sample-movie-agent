macro-def (GENRES) {
  content {
    template ("Genres")
  }
}

macro-def (MOVIE_FROM_FINDMOVIE_CONCEPT) {
  params {
    param (movie) {
      type (Movie)
      min (Optional)
      max (Many)
    }
    param (action) {
      type (FindMovie)
      min (Optional)
      max (One)
    }
  }
  content {
    if (size(movie) == 1) {
      template ("[#{lower(macro('MOVIE_GENRE_VALUE', action.genre))}] movie[ released #{macro('RELEASE_DATE_TIME_EXPRESSION_VALUE', action.releaseDateTimeExpression)}][ with #{value(action.person.name)}]")
    }
    else {
      template ("[#{lower(macro('MOVIE_GENRE_VALUE', action.genre))}] movies[ released #{macro('RELEASE_DATE_TIME_EXPRESSION_VALUE', action.releaseDateTimeExpression)}][ with #{value(action.person.name)}]")
    }
  }
}

macro-def (MOVIE_GENRE_HIGHLIGHT_LABEL_RANDOM) {
  content {
    template ("Rolling the dice")
  }
}

macro-def (MOVIE_GENRE_HIGHLIGHT_LABEL_TODAY) {
  content {
    template ("Today's highlight")
  }
}

macro-def (MOVIE_GENRE_SELECTION_PROMPT) {
  content {
    template ("Which genre are you in the mood for?")
  }
}

macro-def (MOVIE_GENRE_VALUE) {
  params {
    param (genre) {
      type (MovieGenre)
      min (Required)
      max (One)
    }
  }
  content {
    switch (genre) {
      case (Horror) {
        template ("Horror")
      }
      case (Thriller) {
        template ("Thriller")
      }
      case (Mystery) {
        template ("Mystery")
      }
      case (Crime) {
        template ("Crime")
      }
      case (Adventure) {
        template ("Adventure")
      }
      case (Action) {
        template ("Action")
      }
      case (Fantasy) {
        template ("Fantasy")
      }
      case (ScienceFiction) {
        template ("Science Fiction")
      }
      case (Family) {
        template ("Family")
      }
      case (Animation) {
        template ("Animation")
      }
      case (Comedy) {
        template ("Comedy")
      }
      case (Romance) {
        template ("Romance")
      }
      case (Western) {
        template ("Western")
      }
      case (Drama) {
        template ("Drama")
      }
      case (History) {
        template ("History")
      }
      case (War) {
        template ("War")
      }
      case (Documentary) {
        template ("Documentary")
      }
      case (Music) {
        template ("Music")
      }
    }
  }
}

macro-def (MOVIE_HIGHLIGHT_LABEL) {
  content {
    template ("Top recommendation")
  }
}

macro-def (MOVIE_NO_RESULT) {
  params {
    param (movie) {
      type (Movie)
      min (Optional)
      max (Many)
    }
    param (action) {
      type (FindMovie)
      min (Optional)
      max (One)
    }
  }
  content {
    template ("I couldn't find any #{macro('MOVIE_FROM_FINDMOVIE_CONCEPT', movie, action)}.")
  }
}

macro-def (MOVIE_RESULT) {
  params {
    param (movie) {
      type (Movie)
      min (Optional)
      max (Many)
    }
    param (action) {
      type (FindMovie)
      min (Optional)
      max (One)
    }
    param (fromQuiz) {
      type (core.Boolean)
      min (Optional)
      max (One)
      default (false)
    }
  }
  content {
    if (size(movie) == 1) {
      if ($handsFree) {
        template ("[#{value(movie.movieDetails.overview)}] I hope you enjoy #{macro('MOVIE_VALUE', movie)}!")
      }
      else {
        template ("Here's a #{macro('MOVIE_FROM_FINDMOVIE_CONCEPT', movie, action)}.")
      }
    }
    else {
      if (fromQuiz) {
        template ("Based on your answers, I found some [#{lower(macro('MOVIE_GENRE_VALUE', action.genre))}] movies perfect for you.")
      }
      else {
        template ("Here are a few #{macro('MOVIE_FROM_FINDMOVIE_CONCEPT', movie, action)}.")

      }
    }
  }
}

macro-def (PERSON_SELECTION_PROMPT) {
  content {
    template ("Which person?")
  }
}

macro-def (PLAY_GENRE_QUIZ_CONVO_DRIVER) {
  content {
    template ("Help me choose")
  }
}

macro-def (QUIZ_UPDATE_PROMPT) {
  params {
    param (quiz) {
      type (Quiz)
      min (Required)
      max (One)
    }
  }
  content {
    template ("[#{macro('QUIZ_FIRST_QUESTION', quiz)} ][#{macro('QUIZ_PREVIOUS_QUESTION_SELECTED_OPTION_COMMENTARY', quiz)} ][#{macro('QUIZ_CURRENT_QUESTION', quiz)}]")
  }
}

macro-def (QUIZ_FIRST_QUESTION) {
  params {
    param (quiz) {
      type (Quiz)
      min (Required)
      max (One)
    }
  }
  content {
    if (quiz.currentQuestion == 0) {
      template ("Answer these questions and I'll find your perfect movie genre.")
    }
  }
}

macro-def (QUIZ_CURRENT_QUESTION) {
  params {
    param (quiz) {
      type (Quiz)
      min (Required)
      max (One)
    }
  }
  content {
    template ("#{value(quiz.questions[quiz.currentQuestion].text)}")
  }
}

macro-def (QUIZ_PREVIOUS_QUESTION_SELECTED_OPTION_COMMENTARY) {
  params {
    param (quiz) {
      type (Quiz)
      min (Required)
      max (One)
    }
  }
  content {
    if (quiz.currentQuestion > 0) {
      template ("[#{quiz.questions[quiz.currentQuestion-1].options[quiz.questions[quiz.currentQuestion-1].selectedOption].commentary}]")
    }
  }
}

macro-def (RELEASE_DATE_TIME_EXPRESSION_VALUE) {
  params {
    param (releaseDateTimeExpression) {
      type (time.DateTimeExpression)
      min (Required)
      max (One)
    }
  }
  content {
    if (exists(releaseDateTimeExpression.dateInterval) || exists(releaseDateTimeExpression.dateTimeInterval)) {
      // Interval query
      template ("#{input(releaseDateTimeExpression)}")
    }
    else-if (exists(releaseDateTimeExpression.dateTime)) {
      // Punctual query for the release year
      template ("#{value(releaseDateTimeExpression.dateTime.date.year)}")
    }
    else-if (exists(releaseDateTimeExpression.date)) {
      // Punctual query for the release year
      template ("#{value(releaseDateTimeExpression.date.year)}")
    }
  }
}

macro-def (HANDS_FREE_MOVIE_ITEM_SELECTION_QUESTION) {
  content {
    template ("Would you like to hear a summary for this movie?")
  }
}

macro-def (HANDS_FREE_MOVIE_OVERFLOW_STATEMENT) {
  content {
    template ("These are all the movies I have.")
  }
}

macro-def (HANDS_FREE_MOVIE_OVERFLOW_QUESTION) {
  content {
    template ("Which movie would you like?")
  }
}

macro-def (HANDS_FREE_MOVIE_UNDERFLOW_STATEMENT) {
  content {
    template ("This is the first movie.")
  }
}

macro-def (HANDS_FREE_MOVIE_HIGHLIGHT_SUMMARY) {
  params {
    param (movie) {
      type (Movie)
      min (Required)
      max (One)
    }
  }
  content {
    template ("My top recommendation is #{macro('MOVIE_VALUE', movie)}.") {
    }
  }
}

macro-def (HANDS_FREE_MOVIE_NORMAL_SUMMARY) {
  params {
    param (movie) {
      type (Movie)
      min (Required)
      max (One)
    }
  }
  content {
    template ("Another recommendation is #{macro('MOVIE_VALUE', movie)}.") {
    }
  }
}

macro-def (HANDS_FREE_OPTION_UNDERFLOW_STATEMENT) {
  content {
    template ("This is the first set of options.")
  }
}

macro-def (HANDS_FREE_OPTION_ITEM_SELECTION_MORE_PAGES) {
  content {
    template ("Or, say \"More\" to hear more options.")
  }
}

macro-def (HANDS_FREE_OPTION_ITEM_SELECTION_LAST_PAGES) {
  content {
    template ("That's all the options I have. Which will you choose?")
  }
}


macro-def (HANDS_FREE_OPTION_OVERFLOW_QUESTION) {
  content {
    template ("Which option will you choose?")
  }
}

macro-def (HANDS_FREE_OPTION_OVERFLOW_STATEMENT) {
  content {
    template ("There aren't any more options you can choose from.")
  }
}

macro-def (HANDS_FREE_OPTION_LAST_OPTION) {
  params {
    param (page) {
      type (Option)
      min (Required)
      max (Many)
    }
  }
  content {
    if (size(page) == 1) {
      template ("The last option is:")
    }
    else {
      template ("The last options are:")
    }
  }
}

macro-def (HANDS_FREE_PERSON_LIST_SUMMARY) {
  params {
    param (name) {
      type (PersonName)
      min (Optional)
      max (Many)
    }
  }
  content {
    template ("I found a few people matching #{macro('PERSON_NAME_VALUE', name)}.")
  }
}

macro-def (HANDS_FREE_PERSON_ITEM_SELECTION_QUESTION) {
  content {
    template ("Is this who you're looking for?")
  }
}

macro-def (HANDS_FREE_PERSON_OVERFLOW_STATEMENT) {
  content {
    template ("I don't have any more results.")
  }
}

macro-def (HANDS_FREE_PERSON_OVERFLOW_QUESTION) {
  content {
    template ("Who are you looking for?")
  }
}


macro-def (HANDS_FREE_PERSON_UNDERFLOW_STATEMENT) {
  content {
    template ("That's the first person I have.")
  }
}

macro-def (MOVIE_GENRE_HIGHLIGHT_SPOKEN_SUMMARY) {
  params {
    param (movieGenre) {
      type (MovieGenre)
      min (Required)
      max (One)
    }
  }
  content {
    template ("Today's highlighted genre is #{value(movieGenre)}.")
  }
}

macro-def (MOVIE_VALUE) {
  params {
    param (movie) {
      type (Movie)
      min (Required)
      max (One)
    }
  }
  content {
    template ("\"#{value(movie.title)}\"") {
      speech ("#{value(movie.title)}")
    }
  }
}

macro-def (PERSON_NAME_VALUE) {
  params {
    param (name) {
      type (PersonName)
      min (Required)
      max (One)
    }
  }
  content {
    template ("\"#{value(name)}\"") {
      speech ("#{value(name)}")
    }
  }
}